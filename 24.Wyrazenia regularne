# Zadania
24.Wyrazenia regularne

/*
1.Sprawdza czy liczba zmiennoprzecinkowa podana przez użytkownika ma poprawny format. 
Na przykład liczba 123,2341515132135 czy -10 są poprawne ale 18-12 czy 123, już nie,
2.sprawdza czy numer domu jest w formacie numer\numer. Poprawnym numerem jest 123\2A, 24B\3 czy 12\5, ale już numer abc\cba nie,
3.sprawdza czy użytkownik wprowadził poprawną nazwę miasta. Na przykład Wrocław, Zielona Gora czy Bielsko-Biala jest ok,
jednak Ptysiow123 już nie. Dla uproszczenia załóżmy, że żadna nazwa miejscowości nie zwiera polskich znaków.
 */
import org.junit.Test;
import java.util.regex.Pattern;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class test {
        
  @Test
    public void shouldValidateFloatNumber() {
        Pattern pattern = Pattern.compile("-?\\d+(,\\d+)?");
        assertTrue(pattern.matcher("123,2341515132135").matches());
        assertTrue(pattern.matcher("-10").matches());
        assertFalse(pattern.matcher("18-12").matches());
        assertFalse(pattern.matcher("123,").matches());    
}  
  @Test
     public void shouldValidateHouseNumber() {
        Pattern pattern = Pattern.compile("\\d+[A-Z]??\\\\\\d+[A-Z]??"); 
        assertTrue(pattern.matcher("123\\2A").matches());
        assertTrue(pattern.matcher("24B\\3").matches());
        assertTrue(pattern.matcher("12\\5").matches());
        assertFalse(pattern.matcher("abc\\cba").matches());
        assertFalse(pattern.matcher("12").matches());
     
     }
      @Test
    public void shouldValidateCityName() {
        Pattern pattern = Pattern.compile("[A-Z][a-z]+(( ||-)[A-Z][a-z]+)?");
        assertTrue(pattern.matcher("Wroclaw").matches());
        assertTrue(pattern.matcher("Zielona Gora").matches());
        assertTrue(pattern.matcher("Bielsko-Biala").matches());
        assertFalse(pattern.matcher("Ptysiow123").matches());
        assertFalse(pattern.matcher("wroclaw").matches());
}    
}
